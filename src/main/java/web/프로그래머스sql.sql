/*

프로그래머스 SQL 문제

[ SELECT ]
1. 인기있는 아이스크림
SELECT FLAVOR
FROM FIRST_HALF
ORDER BY TOTAL_ORDER DESC, SHIPMENT_ID ASC;

2. 모든 레코드 조회하기
SELECT *
FROM ANIMAL_INS
ORDER BY ANIMAL_ID;

3. 역순 정렬하기
SELECT NAME, DATETIME
FROM ANIMAL_INS
ORDER BY ANIMAL_ID DESC;

4. 동물의 아이디와 이름
SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
ORDER BY ANIMAL_ID;

5. 여러 기준으로 정렬하기
SELECT ANIMAL_ID, NAME, DATETIME
FROM ANIMAL_INS
ORDER BY NAME ASC, DATETIME DESC;

6. 과일로 만든 아이스크림 고르기
SELECT FIRST_HALF.FLAVOR
FROM FIRST_HALF INNER JOIN ICECREAM_INFO ON FIRST_HALF.FLAVOR = ICECREAM_INFO.FLAVOR
WHERE FIRST_HALF.TOTAL_ORDER > 3000 AND ICECREAM_INFO.INGREDIENT_TYPE = 'fruit_based'
ORDER BY FIRST_HALF.TOTAL_ORDER DESC;

7. 조건에 부합하는 중고거래 댓글 조회하기
SELECT b.TITLE, b.BOARD_ID, r.REPLY_ID, r.WRITER_ID, r.CONTENTS, DATE_FORMAT(r.CREATED_DATE, '%Y-%m-%d') AS CREATED_DATE
FROM USED_GOODS_BOARD b INNER JOIN USED_GOODS_REPLY r
ON b.BOARD_ID = r.BOARD_ID
WHERE DATE_FORMAT(b.CREATED_DATE, '%Y') = 2022 AND DATE_FORMAT(b.CREATED_DATE, '%m') = 10
ORDER BY r.CREATED_DATE, b.TITLE;

8. 강원도에 위치한 생산공장 목록 출력하기
SELECT FACTORY_ID, FACTORY_NAME, ADDRESS
FROM FOOD_FACTORY
WHERE ADDRESS LIKE '강원도%'
ORDER BY FACTORY_ID;

9. 아픈 동물 찾기
SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
WHERE INTAKE_CONDITION = 'Sick'
ORDER BY ANIMAL_ID;

10. 어린 동물 찾기
SELECT ANIMAL_ID, NAME
FROM ANIMAL_INS
WHERE NOT INTAKE_CONDITION LIKE 'Aged'
ORDER BY ANIMAL_ID;

11. 상위 n개 레코드
SELECT NAME
FROM ANIMAL_INS
ORDER BY DATETIME
LIMIT 1;

12. Python 개발자 찾기
SELECT ID, EMAIL, FIRST_NAME, LAST_NAME
FROM DEVELOPER_INFOS
WHERE SKILL_1 = 'Python' OR SKILL_2 = 'Python' OR SKILL_3 = 'Python'
ORDER BY ID;





# ============== (2 일차 SQL 문제) 2024-08-07 =================#
# 1.[ SUM, MAX, MIN ] 가장 비싼 상품 구하기
SELECT MAX(PRICE) AS MAX_PRICE
FROM PRODUCT;

# 2.[ SUM, MAX, MIN ] 최댓값 구하기
SELECT MAX(DATETIME) AS 시간
FROM ANIMAL_INS;

***# 3.[ SUM, MAX, MIN ] 가격이 제일 비싼 식품의 정보 출력하기
SELECT *
FROM FOOD_PRODUCT
ORDER BY PRICE DESC
LIMIT 1;

# 4.[ SUM, MAX, MIN ] 최솟값 구하기
SELECT MIN(DATETIME) AS 시간
FROM ANIMAL_INS;

# 5.[ SUM, MAX, MIN ] 동물 수 구하기
SELECT COUNT(ANIMAL_ID) AS 'count'
FROM ANIMAL_INS;

# 6.[ SUM, MAX, MIN ] 중복 제거하기
SELECT COUNT(DISTINCT NAME) AS 'count'
FROM ANIMAL_INS;

# 7.[ SUM, MAX, MIN ] 조건에 맞는 아이템들의 가격의 총합 구하기
SELECT SUM(PRICE) AS TOTAL_PRICE
FROM ITEM_INFO
WHERE RARITY = 'LEGEND';

# 8. [SELECT] 조건에 맞는 회원수 구하기
SELECT COUNT(*) AS USERS
FROM USER_INFO
WHERE DATE_FORMAT(JOINED, '%Y') = 2021 AND AGE >= 20 AND AGE <= 29;

# 9. [SELECT] 잔챙이 잡은 수 구하기
SELECT COUNT(*) AS FISH_COUNT
FROM FISH_INFO
WHERE LENGTH IS NULL;

***# 10. [SELECT] 특정 형질을 가지는 대장균 찾기
SELECT COUNT(*) AS COUNT
FROM ECOLI_DATA
WHERE (GENOTYPE & 5 = 5
OR GENOTYPE & 1 = 1
OR GENOTYPE & 4 = 4)
AND NOT((GENOTYPE & 2 = 2) = TRUE)
--SELECT COUNT(*) AS COUNT
--FROM ECOLI_DATA
--WHERE (CONV(GENOTYPE, 10, 2) & 5 = 5
--OR CONV(GENOTYPE, 10, 2) & 1 = 1
--OR CONV(GENOTYPE, 10, 2) & 4 = 4)
--AND NOT((CONV(GENOTYPE, 10, 2) & 2 = 2) = TRUE)

# 11. [GROUP BY]자동차 종류 별 특정 옵션이 포함된 자동차 수 구하기
SELECT CAR_TYPE, COUNT(CAR_TYPE) AS CARS
FROM CAR_RENTAL_COMPANY_CAR
WHERE OPTIONS LIKE '%통풍시트%' OR OPTIONS LIKE '%열선시트%' OR OPTIONS LIKE  '%가죽시트%'
GROUP BY CAR_TYPE
ORDER BY CAR_TYPE;

# 12. [GROUP BY]성분으로 구분한 아이스크림 총 주문량
SELECT INGREDIENT_TYPE, SUM(TOTAL_ORDER) AS TOTAL_ORDER
FROM FIRST_HALF INNER JOIN ICECREAM_INFO
ON FIRST_HALF.FLAVOR = ICECREAM_INFO.FLAVOR
GROUP BY ICECREAM_INFO.INGREDIENT_TYPE
ORDER BY SUM(TOTAL_ORDER);

# 13. [GROUP BY]진료과별 총 예약 횟수 출력하기
SELECT MCDP_CD AS '진료과코드', COUNT(MCDP_CD) AS '5월예약건수'
FROM APPOINTMENT
WHERE DATE_FORMAT(APNT_YMD, '%Y-%m') = '2022-05'
GROUP BY MCDP_CD
ORDER BY COUNT(MCDP_CD), MCDP_CD;

# 14. [GROUP BY]고양이와 개는 몇 마리 있을까
SELECT ANIMAL_TYPE, COUNT(ANIMAL_TYPE) AS 'count'
FROM ANIMAL_INS
WHERE ANIMAL_TYPE = 'Cat' OR ANIMAL_TYPE = 'Dog'
GROUP BY ANIMAL_TYPE
ORDER BY ANIMAL_TYPE;

# 15. [GROUP BY]동명 동물 수 찾기
SELECT NAME, COUNT(NAME) AS COUNT
FROM ANIMAL_INS
GROUP BY NAME
HAVING COUNT(NAME) >= 2
ORDER BY NAME;

***# 16. [GROUP BY]조건에 맞는 사원 정보 조회하기
SELECT SUM(G.SCORE) AS SCORE, G.EMP_NO, E.EMP_NAME, E.POSITION, E.EMAIL
FROM HR_DEPARTMENT D INNER JOIN HR_EMPLOYEES E ON D.DEPT_ID = E.DEPT_ID
     INNER JOIN HR_GRADE G ON E.EMP_NO = G.EMP_NO
GROUP BY G.EMP_NO
ORDER BY SUM(G.SCORE) DESC
LIMIT 1;

# 17. [GROUP BY]물고기 종류 별 잡은 수 구하기
SELECT COUNT(FISH_NAME_INFO.FISH_NAME) AS FISH_COUNT, FISH_NAME_INFO.FISH_NAME
FROM FISH_INFO INNER JOIN FISH_NAME_INFO ON FISH_INFO.FISH_TYPE = FISH_NAME_INFO.FISH_TYPE
GROUP BY FISH_NAME_INFO.FISH_NAME
ORDER BY COUNT(FISH_NAME_INFO.FISH_NAME) DESC;

# 18. [JOIN]상품 별 오프라인 매출 구하기
SELECT P.PRODUCT_CODE, SUM(P.PRICE * O.SALES_AMOUNT) AS SALES
FROM PRODUCT P INNER JOIN OFFLINE_SALE O ON P.PRODUCT_ID = O.PRODUCT_ID
GROUP BY P.PRODUCT_CODE
ORDER BY SUM(P.PRICE * O.SALES_AMOUNT) DESC, P.PRODUCT_CODE;








*/